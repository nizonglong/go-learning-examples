syntax = "proto3";
package kratos.api;

option go_package = "token-learn/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Jwt jwt=3;
  Token token=4;
  TokenV2 token_v2=5;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    string password = 3;
    google.protobuf.Duration read_timeout = 4;
    google.protobuf.Duration write_timeout = 5;
  }
  Database database = 1;
  Redis redis = 2;
}

message Jwt {
  int64 expire_time = 1;
  string key = 2;
}

message Token {
  message Authentication {
    string key = 1;
    uint32 db = 2;
    int64 refresh_token_expiration = 3;
    int64 access_token_expiration = 4;
  }
  Authentication auth = 1;
}

message TokenV2 {
  message Authentication {
    string key = 1;
    uint32 db = 2;
    int64 refresh_token_expiration = 3;
    int64 access_token_expiration = 4;
  }

  message DeviceConf {
    // k:device_type v:device_limit
    map<string, int64> device_conf_map = 1;
  }

  Authentication auth = 1;
  DeviceConf device = 2;
}